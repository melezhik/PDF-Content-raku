Release 0.2.2
- Changed $.gfx method to not render by default
- Added some structured exceptions to PDF::Content::Ops
Release 0.2.1
- Tweak handling of BX .. EX compatibility blocks
- Fix BDC op (BeginMarkedContentDict) to allow dict or name as second argument
- Correct sequencing checks on 'sh' (ShFill) operator

Release 0.2.0
- Adjust to PDF ver 0.2.8. PDF::DAO classes have been
  renamed to PDF::COS.

Release 0.1.2
- Widthdrew PDF::Content::Text::Reserved.
- Fix PDF::Content::Image.data-uri encoding.

Release 0.1.1
- $gfx.FillColor, $gfx.StrokeColor now register unknown colors in
  the graphics parent's resource dictionary.

Release 0.1.0
- Changed structure of PDF::Content::XObject[Image] to match
  PDF::Content::Font. It now has a $.image-obj handler object,
  similar to the PDF::Content::Font $.font-obj attribute.
- Fixed assignment to page boxes, e.g.: $page.art-box
- Work-around PDF WordSpacing restrictions in multiple-byte
  encoded fonts (issue #2)
- Add 'std' (StandardEncoding) encoding table

Release 0.0.9
- PDF::Content::Font::Enc::Type1 - Optimised encoding to always
  handle subsets up to a maximum of 255 characters. Glyphs are
  mapped as they are encountered:
    -- firstly, as defined by the requested encoding scheme
    -- secondly to unmapped codes in the encoding scheme
    -- thirdly to mapped, but unused character encodings
- PDF::Content::Graphics - fixed graphics update bug

Release 0.0.8
- Replace PDF::Content::Util::Font module with class
  PDF::Content::Font::CoreFont

Release 0.0.7
- Replaced $gfx.TextMove() with $gfx.text-position

Release 0.0.6
- Initial release
    
