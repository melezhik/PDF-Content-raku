{{$NEXT}}
   - Renamed PDF::Content::Tag enumeration InlineElemTags::Code ->
     InlineElemTags::CODE; to avoid clashes with standard Raku classes.
   - Fixes to newly introduced text-box verbatim mode
   - Add missing tag enumeration :TableHead<THead>,
     renamed enumeration :TableFooter<TFoot> -> :TableFoot<TFoot>
   - Fix PDF::Context::Text::Box clone() method

0.5.10  2021-11-20T17:02:59+13:00
  - Added PDF::Content:Text::Box option/attributes:
    -- indent: similar to CSS text-indent property; indents the first line.
    -- verbatim: similar to Latex /verbatim mode: disables kerning, breaks on
       newlines and preserves spaces
  - Fixes to PDF::Content::CoreFont load-font() method

0.5.9  2021-10-12T17:38:03+13:00
  - Deprecate PDF::Content::Tags owner() in favour of canvas()

0.5.8  2021-10-08T14:36:22+13:00
  - Deprecate canvas(&code) for drawing to an HTML::Canvas in favour
    of html-canvas(&code).
  - canvas() method now returns the PDF::Content::Canvas containing
    object, either a Page, XObject Form or Pattern.

0.5.7  2021-10-02T08:19:46+13:00
  - Use PDF::Content v0.5.7+ PDF::Content::Canvas role for composing
    XObject Forms and Tiling Pattern classes

0.5.6  2021-09-14T09:24:28+12:00
   - Fix PDF::Content do() positioning for XObject Forms
   - Changed PDF::Context::Text::Style handling of :$baseline option. Use
     font.ascender as top point, rather than font.bbox.y

0.5.5  2021-07-16T14:26:05+12:00
   - Added block form of paint() method. $gfx.paint(&code, |c)) is equivalent to
     $gfx.Save; code(gfx); $gfx.paint(|c); $gfx.Restore;
   - make page bbox() method order from bottom left corner. So a page with
     /MediaBox [ 0 0 612 -792 ] is returned as [0, -792, 612, 0]

0.5.4  2021-07-07T11:28:02+12:00
   PDF::Font::Loader v0.5.5+ compatibility:
   - Font decoding now has three stages decode($bytes, :cids), decode($bytes, :ords) and
     decode() [text-string, default].
   - Font encoding has two stages encode($text, :cids), encode($text) [byte-string, default].
   - type-check text-box() arguments. Make sure we've got a font dictionary
     or a font object

0.5.3  2021-07-02T13:37:20+12:00
  - Add cid-map-glyph() callback for PDF::Font::Loader

0.5.2  2021-06-23T13:43:44+12:00
  - Fix PDF::Content::Font cb-finish() method and invocation

0.5.1  2021-04-29T12:03:00+12:00
  - Declare additional content tags: /OC /TagSuspect /ReversedChars /Clip
  - Pass through parameters in PDF::Content draw() method

0.5.0  2021-03-25T09:36:34+13:00
  - Add PDF::Content::FontObj - interface role for font manipulation
    objects.
  - core-font() method now returns the font-object of type
    PDF::Content::FontObj, rather than font dictionary. This is for
    consistency with PDF::Font::Loader. This allows type-checking.
    Also, a font object is more likely to be useful to an end user.

0.4.13  2021-03-13T14:33:18+13:00
  - Fix :WordSpacing option in text boxes #13

0.4.12  2021-03-11T11:35:37+13:00
  - Fix use-font() method to simply check for uniqueness of the font
    dictionary. The former (deep) equivalence check is incompatible
    with PDF::Font::Loader 0.4.0+, which builds font dictionaries lazily.
  - Add a current-point() accessor; valid during path construction

0.4.11  2021-02-08T16:42:42+13:00
  - Add matrix reflection method. Put its order to be applied
    after rotation and before skew.
  - Add requirement for Font::AFM version 1.24.4+.
  - Add tests for the new method.
  - Deprecate PDF::Content::Text::Block class in favor of
    PDF::Content::Text::Box and text-block() method in favour of
    text-block(). "Text blocks" already commonly refers to BeginText ..
    EndText regions in a content stream. Call them "text boxes" instead.

0.4.10  2021-01-21T14:04:44+13:00
  - Fix paint() method use of ClosePath op
  - Fix nesting of text blocks in :trace output
  - Refactor Ops class. Remove track-graphics method.

0.4.9  2021-01-12T06:12:47+13:00
  - Support IS0-32000 MacExpertEncoding (mac-extra). This is a supplement
    to MacRomanEncoding that includes various additional characters

Release 0.4.8
- Fixed missing renaming of PDF::Writer to PDF::IO::Writer in test suite.

Release 0.4.7
- Update to PDF 0.4.5. PDF::Writer has been renamed to PDF::IO::Writer
  to free up PDF::Writer for ecosystem usage.

Release 0.4.6
- Allow unknown operations in 'BX' .. 'EX' extension blocks
- Fix accidental error suppression in resource cb-finish() invocations
- Added encode %.charset accessor; used for font subsetting
- Fix array flattening issue in SetDashPattern.

Release 0.4.5
- Fix for PDF::API6 #8 - truncation of large JPEG images
- Renamed github project/Rep
- Text blocks now preserve multi spaces by default. :squish option
  gives old behaviour - collapse multiple spaces to a single space;
  Thanks Tom Browder

Release 0.4.4
- Remove PDF::Content::Tag::* sub-classes. Strip back to content
  related tags only. Functionality exported to PDF::Tags (under
  construction).
- PDF::Content.print() method now aggregates printed text in $*ActualText
  if this variable is present in the lexpad. Utilized by the .mark()
  method in PDF::TAGS::Elem.
  
Release 0.4.3
- withdrew implicit content tagging in .print() and .do() methods
- replaced with new PDF::Content::Tag::Elem .mark() and .do() methods
- add PDF::Content::Tag::Root - explicit struct tree root
- remove FakeGfxParent role from test suite. Just use PDFTiny.
- fixed building of Structured Parent Tree

Release 0.4.2
- rename class PDF::Content::Tag::Marked -> PDF::Content::Tag::Mark
- remove tag-name check on marked content tags. Anything is allowed (it's
  only struct elem nodes that need to be named correctly).
- also remove BBox attribute from Marked content and rename tags to /Text
  and /Image respectively.

Release 0.4.1
- .print() and .say() methods now always return block coordinates
- .tag() returns the return value of the executed block
- the .do() method now accepts a :position argument; compatible with .print()
- text blocks now bind the TextRender and Font graphics settings.
- allow color(r, g, b) instead of color([r, g, b]), etc

Release 0.4.0
- Rename modules *.pm -> *.rakumod

Release 0.3.2
- [PDF::Content::Graphics]
  - remove $.gfx(:render, ...) option
  - $.render() method now only renders once

Release 0.3.1
- [PDF::Content] Add $.tag method. Deprecate $.marked-content()
- [PDF::Content::Interface] new role for PDF implementations
- [t/ops.t] fix text for PDF v0.3.8- (issue #3)

Release 0.3.0
- [PDF::Content::Ops] Added graphics-state :delta option:
  -- rename :comment-ops option to :comment
  -- rename :debug option to :trace
  -- .graphics-state(:delta) returns variables updated since last Save('q')
  -- .gsave(:delta) returns an array that summarizes updated variables on the
     graphics stack. The final entry is the same as .graphics-state(:delta)
  -- improved !debug() method. Uses .graphics-state(:delta) and dumps JSON.
  -- Setting both :comment and :trace now causes tracing to be written as
     comments to PDF content streams
- [PDF::Content::Text::{Block|Line|Style}]
  -- Defer font encoding until rendering
  -- Add comments displaying original text when $gfx :comment option is True

Release 0.2.9
- Add $gfx(:debug) option
- Fix handling of 'std' encoding in PDF::Content::Font::Enc::Glyphic

Release 0.2.8
- Allow named page sizes: $page.media-box = 'Letter';
- Add type-checking/coercement to Type1 encoder differences array

Release 0.2.7
- Added $page.bleed() method. Convenience method for getting
  or setting bleed as a gutter around the crop box.
- Fix tests for Rakudo 2018.12+ blead

Release 0.2.6
- $gfx.do() and $text-block.print() now return rectangles
  representing the display coordinates
- Added method user-default-coords() to convert coordinates or
  rectangles from transformed user-space to default user-space.

Release 0.2.5
- Streamline Save(q) and Restore(Q) methods in PDF::Content::Ops
- Fixed Extended Graphics State Smoothness method. Renamed BlackGenerationFunction
  -> BlackGeneration and UnderColorRemovalFunction -> UnderColorRemoval

Release 0.2.4
- Added PDF::Content::Tag and $.marked-content method for tag extraction
- Added PDF::Content::Font::Enc::Glyphic role
- Keep space characters when rendering text blocks. Conform with
  [PDF 32000 - 14.8.2.5: Identifying Word Breaks]

Release 0.2.3
- open() method moved from PDF::Content::Image to PDF::Content::XObject
- fix spelling of rendering intent 'RelativeColorimetric'

Release 0.2.2
- Changed $.gfx method to not render by default
- Added some structured exceptions to PDF::Content::Ops
- Add $gfx.char-width, .char-height and .char-bbox attributes.
- Track operators d0 (SetCharWidth) and d1 (SetCharWidthBBox)

Release 0.2.1
- Tweak handling of BX .. EX compatibility blocks
- Fix BDC op (BeginMarkedContentDict) to allow dict or name as second argument
- Correct sequencing checks on 'sh' (ShFill) operator

Release 0.2.0
- Adjust to PDF ver 0.2.8. PDF::DAO classes have been
  renamed to PDF::COS.

Release 0.1.2
- Withdrew PDF::Content::Text::Reserved.
- Fix PDF::Content::Image.data-uri encoding.

Release 0.1.1
- $gfx.FillColor, $gfx.StrokeColor now register unknown colors in
  the graphics parent's resource dictionary.

Release 0.1.0
- Changed structure of PDF::Content::XObject[Image] to match
  PDF::Content::Font. It now has a $.image-obj handler object,
  similar to the PDF::Content::Font $.font-obj attribute.
- Fixed assignment to page boxes, e.g.: $page.art-box
- Work-around PDF WordSpacing restrictions in multiple-byte
  encoded fonts (issue #2)
- Add 'std' (StandardEncoding) encoding table

Release 0.0.9
- PDF::Content::Font::Enc::Type1 - Optimised encoding to always
  handle subsets up to a maximum of 255 characters. Glyphs are
  mapped as they are encountered:
    -- firstly, as defined by the requested encoding scheme
    -- secondly to unmapped codes in the encoding scheme
    -- thirdly to mapped, but unused character encodings
- PDF::Content::Graphics - fixed graphics update bug

Release 0.0.8
- Replace PDF::Content::Util::Font module with class
  PDF::Content::Font::CoreFont

Release 0.0.7
- Replaced $gfx.TextMove() with $gfx.text-position

Release 0.0.6
- Initial release
    
